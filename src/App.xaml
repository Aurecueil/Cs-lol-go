<Application x:Class="ModManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ModManager"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <System:Double x:Key="ModListEntryHeight">60</System:Double>
		<Thickness x:Key="ModListEntryPadding">5,2,5,2</Thickness>
		<Thickness x:Key="ModListEntryMargin">4,4,4,4</Thickness>

        <Color x:Key="AccentColor">#D16002</Color>
        <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}"/>
        <SolidColorBrush x:Key="TextBrush" Color="White"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FF2A2A2A"/>

        <Style TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border 
                    Background="{StaticResource BackgroundBrush}" 
                    BorderBrush="{DynamicResource AccentBrush}" 
                    BorderThickness="2"
                    CornerRadius="6"
                    Padding="8,4"
                    SnapsToDevicePixels="True">

                            <TextBlock 
                        Text="{TemplateBinding Content}" 
                        Foreground="{StaticResource TextBrush}" 
                        FontSize="13"
                        TextWrapping="Wrap" />

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PlaceholderService.BorderBrush)}"
                    Background="{TemplateBinding Background}">
                            <Grid>
                                <!-- Placeholder text -->
                                <TextBlock x:Name="placeholderText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PlaceholderService.Placeholder)}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="#666"
                            Margin="0,5,10,5"
                            Visibility="Collapsed"
                            VerticalAlignment="Center"/>
                                <!-- Actual text content -->
                                <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Show placeholder when empty or null -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <!-- Change border color when focused -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" 
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PlaceholderService.FocusedBorderBrush), TargetNullValue={StaticResource AccentBrush}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="roundHighlight" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="BackgroundBorder"
                    Background="Transparent"
                    CornerRadius="50"
                    SnapsToDevicePixels="True" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="#99000000" />
                                <!-- 0.6 opacity black: #99000000 -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="#CC000000" />
                                <!-- Slightly darker when pressed -->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="tray_highlight" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3A3A3A" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF2A2A2A" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="diagwindow_highlight" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource AccentBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3A3A3A" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF2A2A2A" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModCreate_highlight" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
        Background="#333"
        BorderBrush="{DynamicResource AccentBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        Padding="{TemplateBinding Padding}"
        SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3A3A3A" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF2A2A2A" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModCreate_ToggleSwitch" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Border x:Name="TrackBorder"
                            Width="50"
                            Height="24"
                            Background="#FF2A2A2A"
                            BorderBrush="#FF3A3A3A"
                            BorderThickness="2"
                            CornerRadius="12"
                            SnapsToDevicePixels="True">
                                <Canvas>
                                    <Border x:Name="ThumbBorder"
                                    Width="16"
                                    Height="16"
                                    Background="#FF4A4A4A"
                                    CornerRadius="8"
                                    Canvas.Left="2"
                                    Canvas.Top="2">
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="ThumbTransform" X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                </Canvas>
                            </Border>

                           
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="TrackBorder" Property="Background" Value="#F333"/>
                            </Trigger>

                            <!-- Pressed effect -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="TrackBorder" Property="Background" Value="#FF2A2A2A"/>
                            </Trigger>

                            <!-- Checked state -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TrackBorder" Property="BorderBrush" Value="{DynamicResource ResourceKey=AccentBrush}"/>
                                <Setter TargetName="ThumbBorder" Property="Background" Value="{DynamicResource ResourceKey=AccentBrush}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform"
                                                   Storyboard.TargetProperty="X"
                                                   To="26"
                                                   Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform"
                                                   Storyboard.TargetProperty="X"
                                                   To="0"
                                                   Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="ToggleSwitchStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Border x:Name="TrackBorder" 
                            Width="40" Height="20" 
                            CornerRadius="10" 
                            Background="#FF555555"
                            BorderThickness="0"/>
                            <Ellipse x:Name="ThumbEllipse" 
                             Width="16" Height="16" 
                             Fill="White"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             Margin="2,0,0,0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="ThumbTransform"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TrackBorder" Property="Background" Value="#FFE91E63"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                   Storyboard.TargetProperty="X" 
                                                   To="22" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ThumbTransform" 
                                                   Storyboard.TargetProperty="X" 
                                                   To="0" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Option Row Style -->
        <Style x:Key="OptionRowStyle" TargetType="Grid">
            <Setter Property="Margin" Value="0,6,0,6"/>
        </Style>

        <!-- Option Label Style -->
        <Style x:Key="OptionLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Path TextBox Style -->
        <Style x:Key="PathTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Section Header Style -->
        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,15,0,8"/>
        </Style>

        

        <!-- Browse Button Style -->
        <Style x:Key="BrowseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF555555"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF666666"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF666666"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF444444"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Border 
    x:Name="Border" 
    Background="Transparent"
    BorderThickness="0">
                <Path 
        x:Name="Arrow"
        HorizontalAlignment="Right"
        VerticalAlignment="Center"
        Data="M 0 0 L 4 4 L 8 0 Z"
        Fill="White"
        Stretch="Uniform"
        Margin="0,0,15,0"
        Width="8"
        Height="4"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource AccentBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        
        <Style TargetType="ComboBox" x:Key="StyledComboBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF252525"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Clipped Background -->
                            <Border 
                            x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <ToggleButton 
                                    Name="ToggleButton"
                                    Template="{StaticResource ComboBoxToggleButton}"
                                    Grid.Column="2"
                                    Focusable="False"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"
                                    Background="Transparent"
                                    BorderThickness="0"/>
                                    <ContentPresenter
                                    Name="ContentSite"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left" />
                                </Grid>
                            </Border>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">
                                <Grid 
                                Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="500"
                                Background="#FF252525"
                                Margin="0,2,0,0">
                                    <Border 
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="5"
                                    Background="#FF252525">
                                        <ScrollViewer 
                                        Margin="4" 
                                        SnapsToDevicePixels="True" 
                                        CanContentScroll="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        


        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF2A2A2A"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF2A2A2A"/>
        </Style>
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!-- Hover background circle -->
                            <Ellipse x:Name="HoverBackground" 
                    Width="45" 
                    Height="45" 
                    Fill="#15FFFFFF" 
                    Opacity="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>

                            <!-- Checkbox border -->
                            <Border x:Name="CheckboxBorder"
                    Width="25"
                    Height="25"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">

                                <!-- Checkmark -->
                                <Path x:Name="CheckMark"
                      Data="M 5,12 L 10,17 L 20,7"
                      Stroke="White"
                      StrokeThickness="3"
                      StrokeLineJoin="Round"
                      Stretch="Uniform"
                      Margin="2"
                      Opacity="0"/>
                            </Border>

                            <!-- Content presenter for label -->
                            <ContentPresenter x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Margin="60,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Hover state -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverBackground" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Checked state -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckboxBorder" Property="Background" Value="{DynamicResource  AccentBrush}"/>
                                <Setter TargetName="CheckboxBorder" Property="BorderBrush" Value="{DynamicResource  AccentBrush}"/>
                                <Setter TargetName="CheckMark" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Unchecked state -->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckboxBorder" Property="Background" Value="#FF2A2A2A"/>
                                <Setter TargetName="CheckboxBorder" Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="CheckMark" Property="Opacity" Value="0"/>
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckboxBorder" Property="BorderBrush" Value="LightGray"/>
                                <Setter TargetName="CheckboxBorder" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Your custom styles -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="Transparent"/>
            <!-- Default if not specified -->
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Main background (now respects Background property) -->
                            <Ellipse x:Name="MainCircle"
                Fill="{TemplateBinding Background}"
                Width="36"
                Height="36"/>

                            <!-- Your existing hover highlight -->
                            <Ellipse x:Name="HighlightCircle"
                Fill="Transparent"
                Width="36"
                Height="36"/>

                            <ContentPresenter HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HighlightCircle" 
                    Property="Fill" 
                    Value="#15FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Thumb">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="#666"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border Background="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#999"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Repeat button style: invisible but functional -->
        <Style x:Key="NoHighlightRepeatButtonStyle" TargetType="RepeatButton">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar style -->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track"
                                   Orientation="{TemplateBinding Orientation}"
                                   IsDirectionReversed="true"
                                   Focusable="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource  NoHighlightRepeatButtonStyle}" Height="16" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource  NoHighlightRepeatButtonStyle}" Height="16" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconTextBlockStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="24"/>
        </Style>
    </Application.Resources>
</Application>
